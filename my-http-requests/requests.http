### Variables
@baseURL = http://localhost:8080
@content-type = application/json

### Register
# @name registerUser
POST {{baseURL}}/auth/register
Content-Type: {{content-type}}

{
"email": "test@example.com",
"password": "Password123!",
"name": "Test User"
}

###Login
# @name login
POST {{baseURL}}/auth/login
Content-Type: {{content-type}}

{
"email": "test@example.com",
"password": "Password123!"
}

### sec access token
@accessToken = {{login.response.body.$.accessToken}}

###
# @name createNewTask
POST {{baseURL}}/tasks
Content-Type: {{content-type}}
Authorization: Bearer {{accessToken}}

{
    "title": "Learn NestJS",
    "description": "Complete NestJS project",
    "status": "OPEN",
    "userId": "bfa4cdb7-77b8-4913-8bd7-0a52b1d7fd42",
    "labels": [
        {
            "name": "backend"
        },
        {
            "name": "nestjs"
        }
    ]
}

### Set taskId variable
@taskId = {{createNewTask.response.body.$.id}}


{{baseURL}}
### Get All Tasks
# @name getAllTasks
GET {{baseURL}}/tasks?limit=2&offset=0
Authorization: Bearer {{accessToken}}

### Get All Tasks with status filter
# @name getAllTasksWithStatus
GET {{baseURL}}/tasks?status=OPEN
Authorization: Bearer {{accessToken}}

### Get All Tasks with search filter
# @name getAllTasksWithSearch
GET {{baseURL}}/tasks?search=NestJS
Authorization: Bearer {{accessToken}}

### Get All Tasks with labels filter
# @name getAllTasksWithLabels
GET {{baseURL}}/tasks?labels=urgent, nestjs
Authorization: Bearer {{accessToken}}

### Get All Tasks with sorting
# @name getAllTasksWithSorting
GET {{baseURL}}/tasks?sortBy=createdAt&sortOrder=DESC
Authorization: Bearer {{accessToken}}

###Get One Task
GET {{baseURL}}/tasks/{{taskId}}
Authorization: Bearer {{accessToken}}


### Test invalid status
POST {{baseURL}}/tasks
Content-Type: {{content-type}}
Authorization: Bearer {{accessToken}}

{
    "title": null,
    # "description": "Complete NestJS project",
    "status": "XXX"
}

### Update task
PATCH {{baseURL}}/tasks/{{taskId}}
Content-Type: {{content-type}}
Authorization: Bearer {{accessToken}}

{
    "status": "OPEN",
    "labels": []
}

### Delete task
DELETE {{baseURL}}/tasks/{{taskId}}
Authorization: Bearer {{accessToken}}

### Add Task Labels
# @name addTaskLabels
POST {{baseURL}}/tasks/{{taskId}}/labels
Content-Type: {{content-type}}
Authorization: Bearer {{accessToken}}

[
    {
        "name": "urgent"
    },
    {
        "name": "high priority"
    }
]

### Remove Task Labels
# @name removeTaskLabels
DELETE {{baseURL}}/tasks/{{taskId}}/labels
Content-Type: {{content-type}}
Authorization: Bearer {{accessToken}}

[
    "backend",
    "urgent"
]